CMAKE_MINIMUM_REQUIRED ( VERSION 2.8 )
PROJECT ( AlloVolumeRendering )

SET ( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake_modules" )

SET ( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall" )

SET ( EXECUTABLE_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin" )
SET ( LIBRARY_OUTPUT_PATH "${CMAKE_BINARY_DIR}/lib" )

IF ( ${CMAKE_SYSTEM_NAME} MATCHES "Darwin" )
  SET ( CUDA_HOST_COMPILER clang )
ENDIF ( )

FIND_PACKAGE ( PkgConfig REQUIRED )
PKG_SEARCH_MODULE ( GLFW REQUIRED glfw3 )

FIND_PACKAGE ( CUDA REQUIRED )
FIND_PACKAGE ( HDF5 REQUIRED )
FIND_PACKAGE ( OpenGL REQUIRED )

INCLUDE_DIRECTORIES (
  include
  ${HDF5_INCLUDE_DIRS}
  ${GLFW_INCLUDE_DIRS}
)

ADD_LIBRARY ( dataset
    src/dataset_flash.cpp
)

CUDA_ADD_LIBRARY ( renderer
    src/renderer_cuda.cu
    src/image_codec.cpp
)

ADD_EXECUTABLE ( test
    src/test.cpp
)

IF ( ${CMAKE_SYSTEM_NAME} MATCHES "Darwin" )
    FIND_PACKAGE ( GLFW REQUIRED )
    TARGET_LINK_LIBRARIES ( test
      ${GLFW_LIBRARY}
    )
ENDIF ( )

IF ( ${CMAKE_SYSTEM_NAME} MATCHES "Linux" )
    TARGET_LINK_LIBRARIES ( test
      ${GLFW_STATIC_LIBRARIES}
    )
ENDIF ( )

TARGET_LINK_LIBRARIES ( test
    dataset
    renderer
    ${HDF5_LIBRARIES}
    ${OPENGL_LIBRARIES}
)
