package allovolume.protocol;

message Pose {
    required float x  = 1 [ default = 0.0 ];
    required float y  = 2 [ default = 0.0 ];
    required float z  = 3 [ default = 0.0 ];
    required float qx = 4 [ default = 0.0 ];
    required float qy = 5 [ default = 0.0 ];
    required float qz = 6 [ default = 0.0 ];
    required float qw = 7 [ default = 1.0 ];
}

message TransferFunction {
    enum Scale {
        Linear = 1;
        Log = 2;
    }
    required Scale scale       = 1 [ default = Linear ];
    required float domain_min  = 2 [ default = 0 ];
    required float domain_max  = 3 [ default = 1 ];
    required int32 size        = 4 [ default = 1600 ];
    required string layers     = 5 [ default = "[]" ];
}

message RGBLevels {
    required float min = 1 [ default = 0.0 ];
    required float max = 2 [ default = 1.0 ];
    required float pow = 3 [ default = 1.0 ];
}

message LensParameters {
    required float focal_distance = 1 [ default = 1.0 ];
    required float eye_separation = 2 [ default = 0.0 ];
}

message RendererParameters {
    enum RenderingMethod {
        BasicBlending = 1;
        RK4           = 2;
        AdaptiveRKF   = 3;
    }
    required RenderingMethod method      = 1 [ default = BasicBlending ];
    required float blending_coefficient  = 2 [ default = 1.0 ];
    required float step_size             = 3 [ default = 1.0 ];
}

message HDRenderingTask {
    enum LensType {
        Equirectangular = 1;
        Perspective     = 2;
    }
    required LensType lens_type             = 1 [ default = Perspective ];
    required LensParameters lens_parameters = 2;

    required string output_filename  = 3;

    required int32 total_width       = 4 [ default = 2560 ];
    required int32 total_height      = 5 [ default = 1440 ];

    optional float perspective_fovx  = 10 [ default = 1.5707963268 ];

    optional string identifier       = 50;
    optional string task_id          = 51;
    optional string task_slave       = 52;
    optional int32 task_vp_x         = 53;
    optional int32 task_vp_y         = 54;
    optional int32 task_vp_w         = 55;
    optional int32 task_vp_h         = 56;
}

message HDRenderingResponse {
    required string identifier       = 1;
    required string task_id          = 2;
    optional int32 task_vp_x         = 3;
    optional int32 task_vp_y         = 4;
    optional int32 task_vp_w         = 5;
    optional int32 task_vp_h         = 6;
    required bytes pixel_data        = 7;
}

message RendererBroadcast {
    enum Type {
        Render                 = 1;
        Present                = 2;

        Barrier                = 5;

        LoadVolume             = 10;
        LoadVolumeFromFile     = 11;

        SetPose                = 20;
        SetTransferFunction    = 21;
        SetRGBLevels           = 22;
        SetLensParameters      = 23;
        SetRendererParameters  = 24;

        HDRendering            = 100;
    }

    required Type type                               = 1;

    optional Pose pose                               = 2;
    optional RGBLevels rgb_levels                    = 3;

    optional TransferFunction transfer_function      = 5;

    optional string volume_filename                  = 10;
    optional bytes volume_data                       = 11;

    optional LensParameters lens_parameters          = 20;
    optional RendererParameters renderer_parameters  = 21;

    optional HDRenderingTask hd_rendering_task       = 100;

    optional int32 barrier_info                      = 50;
}

message RendererFeedback {
    enum Type {
        Register                 = 1;
        BarrierReady             = 2;
        HDRenderingResponse      = 3;
    }

    required string client_name  = 1;
    required Type type           = 2;

    optional int32 barrier_info  = 50;

    optional HDRenderingResponse hd_rendering_response = 100;
}

message ControllerRequest {
    enum Type {
        Render                = 1;
        Present               = 2;

        LoadVolume            = 10;
        LoadVolumeFromFile    = 11;

        SetPose               = 20;
        GetPose               = 30;

        SetTransferFunction   = 21;
        GetTransferFunction   = 31;

        SetRGBLevels          = 22;
        GetRGBLevels          = 32;

        SetLensParameters     = 23;
        GetLensParameters     = 33;

        SetRendererParameters = 24;
        GetRendererParameters = 34;

        SavePreset            = 40;
        LoadPreset            = 41;
        ListPresets           = 45;

        GetImage              = 50;

        HDRendering           = 200;
    }

    required Type type                                  = 1;
    optional string sender                              = 2;

    optional string volume_filename                     = 11;
    optional string volume_dataset                      = 12;
    optional string volume_description                  = 13 [ default = "" ];

    optional Pose pose                                  = 20;
    optional TransferFunction transfer_function         = 21;
    optional RGBLevels rgb_levels                       = 22;
    optional LensParameters lens_parameters             = 23;
    optional RendererParameters renderer_parameters     = 24;

    optional string preset_name                         = 40;
    optional string preset_description                  = 41;

    optional string image_filename                      = 50;

    optional HDRenderingTask hd_rendering_task          = 100;
}

message ParameterChangeEvent {
    enum Type {
        SetPose                = 1;
        SetTransferFunction    = 2;
        SetRGBLevels           = 3;
        SetLensParameters      = 4;
        SetRendererParameters  = 5;
        HDRenderingComplete    = 6;
    }

    required Type type         = 1;
    required string sender     = 2;

    optional TransferFunction transfer_function     = 10;
    optional Pose pose                              = 11;
    optional RGBLevels rgb_levels                   = 12;
    optional LensParameters lens_parameters         = 13;
    optional RendererParameters renderer_parameters = 14;

    optional string hd_rendering_filename           = 20;
}

message ControllerResponse {
    required string status                              = 1 [ default = "success" ];
    optional Pose pose                                  = 20;
    optional TransferFunction transfer_function         = 21;
    optional RGBLevels rgb_levels                       = 22;
    optional LensParameters lens_parameters             = 23;
    optional RendererParameters renderer_parameters     = 24;

    repeated string preset_list                         = 40;

    optional bytes binary_data                          = 100;
}

message ParameterPreset {
    // Metadata.
    required int64 timestamp    = 1;
    required string dataset     = 2;
    required string name        = 3;
    optional string description = 4 [ default = "" ];
    // The state.
    required TransferFunction transfer_function     = 10;
    required Pose pose                              = 11;
    required RGBLevels rgb_levels                   = 12;
    required LensParameters lens_parameters         = 13;
    required RendererParameters renderer_parameters = 14;
}
