package allovolume.protocol;

message Pose {
    required float x  = 1;
    required float y  = 2;
    required float z  = 3;
    required float qx = 4;
    required float qy = 5;
    required float qz = 6;
    required float qw = 7;
}

message TransferFunction {
    enum Scale {
        Linear = 1;
        Log = 2;
    }
    required Scale scale       = 1;
    required float domain_min  = 2;
    required float domain_max  = 3;
    required bytes content     = 4;
}

message RGBCurve {
    required int32 size        = 1;
    required bytes content     = 2;
}

message LensParameters {
    required float focal_distance = 1;
    required float eye_separation = 2;
}

message RendererParameters {
    enum RenderingMethod {
        RK4                    = 1;
        AdaptiveRKV            = 2;
    }
    required RenderingMethod method     = 1;
    required float blending_coefficient = 2;
}

message RendererBroadcast {
    enum Type {
        LoadVolume             = 10;
        LoadVolumeFromFile     = 11;
        SetPose                = 20;
        SetLensParameters      = 21;
        SetRendererParameters  = 22;
        SetTransferFunction    = 30;
        SetRGBCurve            = 40;
        Render                 = 100;
        Present                = 101;
        Barrier                = 500;
    }

    required Type type        = 1;

    optional Pose pose = 2;
    optional RGBCurve rgb_curve      = 3;

    optional TransferFunction transfer_function = 5;

    optional string volume_filename  = 10;
    optional bytes volume_data       = 11;

    optional LensParameters lens_parameters = 20;
    optional RendererParameters renderer_parameters = 21;

    optional int32 barrier_info = 50;
}

message RendererFeedback {
    enum Type {
        Register                 = 1;
        BarrierReady             = 2;
    }

    required string client_name  = 1;
    required Type type           = 2;
    optional int32 barrier_info  = 50;
}

message ControllerRequest {
    enum Type {
        LoadVolume            = 0;
        LoadVolumeFromFile    = 1;
        SetPose               = 2;
        SetTransferFunction   = 3;
        SetRGBCurve           = 4;
        SetLensParameters     = 5;
        SetRendererParameters = 6;
        Render                = 7;
        Present               = 8;
    }

    required Type type                              = 1;

    optional TransferFunction transfer_function     = 10;
    optional string volume_filename                 = 11;

    optional Pose pose                                  = 20;
    optional RGBCurve rgb_curve                         = 21;
    optional LensParameters lens_parameters             = 22;
    optional RendererParameters renderer_parameters     = 23;
}

message ParameterChangeEvent {
    enum Type {
        SetPose                = 1;
        SetTransferFunction    = 2;
        SetRGBCurve            = 3;
        SetLensParameters      = 4;
        SetRendererParameters  = 5;
    }

    required Type type         = 1;

    optional TransferFunction transfer_function     = 10;
    optional Pose pose                              = 11;
    optional RGBCurve rgb_curve                     = 12;
    optional LensParameters lens_parameters         = 13;
    optional RendererParameters renderer_parameters = 14;
}

message ControllerResponse {
    required string status = 1;
}
